// @ts-nocheck
// This file is autogenerated by scripts/build-registry.ts
// Do not edit this file directly.
import * as React from "react"

export const Index: Record<string, any> = {
  "react-hooks": {
    "debounce": {
      name: "debounce",
      type: "hooks:hook",
      registryDependencies: undefined,
      component: React.lazy(() => import("@/registry/react-hooks/hook/debounce")),
      source: "",
      files: ["registry/react-hooks/hook/debounce.ts"],
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "battery": {
      name: "battery",
      type: "hooks:hook",
      registryDependencies: undefined,
      component: React.lazy(() => import("@/registry/react-hooks/hook/battery")),
      source: "",
      files: ["registry/react-hooks/hook/battery.ts"],
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "click-away": {
      name: "click-away",
      type: "hooks:hook",
      registryDependencies: undefined,
      component: React.lazy(() => import("@/registry/react-hooks/hook/click-away")),
      source: "",
      files: ["registry/react-hooks/hook/click-away.ts"],
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "cookies": {
      name: "cookies",
      type: "hooks:hook",
      registryDependencies: undefined,
      component: React.lazy(() => import("@/registry/react-hooks/hook/cookies")),
      source: "",
      files: ["registry/react-hooks/hook/cookies.ts","registry/react-hooks/hook/memoized-fn.ts"],
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "copy-to-clipboard": {
      name: "copy-to-clipboard",
      type: "hooks:hook",
      registryDependencies: undefined,
      component: React.lazy(() => import("@/registry/react-hooks/hook/copy-to-clipboard")),
      source: "",
      files: ["registry/react-hooks/hook/copy-to-clipboard.ts"],
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "counter": {
      name: "counter",
      type: "hooks:hook",
      registryDependencies: undefined,
      component: React.lazy(() => import("@/registry/react-hooks/hook/counter")),
      source: "",
      files: ["registry/react-hooks/hook/counter.ts"],
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "default": {
      name: "default",
      type: "hooks:hook",
      registryDependencies: undefined,
      component: React.lazy(() => import("@/registry/react-hooks/hook/default")),
      source: "",
      files: ["registry/react-hooks/hook/default.ts"],
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "document-title": {
      name: "document-title",
      type: "hooks:hook",
      registryDependencies: undefined,
      component: React.lazy(() => import("@/registry/react-hooks/hook/document-title")),
      source: "",
      files: ["registry/react-hooks/hook/document-title.ts"],
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "favicon": {
      name: "favicon",
      type: "hooks:hook",
      registryDependencies: undefined,
      component: React.lazy(() => import("@/registry/react-hooks/hook/favicon")),
      source: "",
      files: ["registry/react-hooks/hook/favicon.ts"],
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "geolocation": {
      name: "geolocation",
      type: "hooks:hook",
      registryDependencies: undefined,
      component: React.lazy(() => import("@/registry/react-hooks/hook/geolocation")),
      source: "",
      files: ["registry/react-hooks/hook/geolocation.ts"],
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "history-state": {
      name: "history-state",
      type: "hooks:hook",
      registryDependencies: undefined,
      component: React.lazy(() => import("@/registry/react-hooks/hook/history-state")),
      source: "",
      files: ["registry/react-hooks/hook/history-state.ts"],
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "hover": {
      name: "hover",
      type: "hooks:hook",
      registryDependencies: undefined,
      component: React.lazy(() => import("@/registry/react-hooks/hook/hover")),
      source: "",
      files: ["registry/react-hooks/hook/hover.ts"],
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "idle": {
      name: "idle",
      type: "hooks:hook",
      registryDependencies: undefined,
      component: React.lazy(() => import("@/registry/react-hooks/hook/idle")),
      source: "",
      files: ["registry/react-hooks/hook/idle.ts"],
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "intersection-observer": {
      name: "intersection-observer",
      type: "hooks:hook",
      registryDependencies: undefined,
      component: React.lazy(() => import("@/registry/react-hooks/hook/intersection-observer")),
      source: "",
      files: ["registry/react-hooks/hook/intersection-observer.ts"],
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "is-client": {
      name: "is-client",
      type: "hooks:hook",
      registryDependencies: undefined,
      component: React.lazy(() => import("@/registry/react-hooks/hook/is-client")),
      source: "",
      files: ["registry/react-hooks/hook/is-client.ts"],
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "is-first-render": {
      name: "is-first-render",
      type: "hooks:hook",
      registryDependencies: undefined,
      component: React.lazy(() => import("@/registry/react-hooks/hook/is-first-render")),
      source: "",
      files: ["registry/react-hooks/hook/is-first-render.ts"],
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "list": {
      name: "list",
      type: "hooks:hook",
      registryDependencies: undefined,
      component: React.lazy(() => import("@/registry/react-hooks/hook/list")),
      source: "",
      files: ["registry/react-hooks/hook/list.ts"],
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "local-storage": {
      name: "local-storage",
      type: "hooks:hook",
      registryDependencies: undefined,
      component: React.lazy(() => import("@/registry/react-hooks/hook/local-storage")),
      source: "",
      files: ["registry/react-hooks/hook/local-storage.ts"],
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "lock-body-scroll": {
      name: "lock-body-scroll",
      type: "hooks:hook",
      registryDependencies: undefined,
      component: React.lazy(() => import("@/registry/react-hooks/hook/lock-body-scroll")),
      source: "",
      files: ["registry/react-hooks/hook/lock-body-scroll.ts"],
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "long-press": {
      name: "long-press",
      type: "hooks:hook",
      registryDependencies: undefined,
      component: React.lazy(() => import("@/registry/react-hooks/hook/long-press")),
      source: "",
      files: ["registry/react-hooks/hook/long-press.ts"],
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "map": {
      name: "map",
      type: "hooks:hook",
      registryDependencies: undefined,
      component: React.lazy(() => import("@/registry/react-hooks/hook/map")),
      source: "",
      files: ["registry/react-hooks/hook/map.ts"],
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "measure": {
      name: "measure",
      type: "hooks:hook",
      registryDependencies: undefined,
      component: React.lazy(() => import("@/registry/react-hooks/hook/measure")),
      source: "",
      files: ["registry/react-hooks/hook/measure.ts"],
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "media-query": {
      name: "media-query",
      type: "hooks:hook",
      registryDependencies: undefined,
      component: React.lazy(() => import("@/registry/react-hooks/hook/media-query")),
      source: "",
      files: ["registry/react-hooks/hook/media-query.ts"],
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "mouse": {
      name: "mouse",
      type: "hooks:hook",
      registryDependencies: undefined,
      component: React.lazy(() => import("@/registry/react-hooks/hook/mouse")),
      source: "",
      files: ["registry/react-hooks/hook/mouse.ts"],
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "network-state": {
      name: "network-state",
      type: "hooks:hook",
      registryDependencies: undefined,
      component: React.lazy(() => import("@/registry/react-hooks/hook/network-state")),
      source: "",
      files: ["registry/react-hooks/hook/network-state.ts"],
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "object-state": {
      name: "object-state",
      type: "hooks:hook",
      registryDependencies: undefined,
      component: React.lazy(() => import("@/registry/react-hooks/hook/object-state")),
      source: "",
      files: ["registry/react-hooks/hook/object-state.ts"],
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "orientation": {
      name: "orientation",
      type: "hooks:hook",
      registryDependencies: undefined,
      component: React.lazy(() => import("@/registry/react-hooks/hook/orientation")),
      source: "",
      files: ["registry/react-hooks/hook/orientation.ts"],
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "preferred-language": {
      name: "preferred-language",
      type: "hooks:hook",
      registryDependencies: undefined,
      component: React.lazy(() => import("@/registry/react-hooks/hook/preferred-language")),
      source: "",
      files: ["registry/react-hooks/hook/preferred-language.ts"],
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "previous": {
      name: "previous",
      type: "hooks:hook",
      registryDependencies: undefined,
      component: React.lazy(() => import("@/registry/react-hooks/hook/previous")),
      source: "",
      files: ["registry/react-hooks/hook/previous.ts"],
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "queue": {
      name: "queue",
      type: "hooks:hook",
      registryDependencies: undefined,
      component: React.lazy(() => import("@/registry/react-hooks/hook/queue")),
      source: "",
      files: ["registry/react-hooks/hook/queue.ts"],
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "render-count": {
      name: "render-count",
      type: "hooks:hook",
      registryDependencies: undefined,
      component: React.lazy(() => import("@/registry/react-hooks/hook/render-count")),
      source: "",
      files: ["registry/react-hooks/hook/render-count.ts"],
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "render-info": {
      name: "render-info",
      type: "hooks:hook",
      registryDependencies: undefined,
      component: React.lazy(() => import("@/registry/react-hooks/hook/render-info")),
      source: "",
      files: ["registry/react-hooks/hook/render-info.ts"],
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "script": {
      name: "script",
      type: "hooks:hook",
      registryDependencies: undefined,
      component: React.lazy(() => import("@/registry/react-hooks/hook/script")),
      source: "",
      files: ["registry/react-hooks/hook/script.ts"],
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "session-storage": {
      name: "session-storage",
      type: "hooks:hook",
      registryDependencies: undefined,
      component: React.lazy(() => import("@/registry/react-hooks/hook/session-storage")),
      source: "",
      files: ["registry/react-hooks/hook/session-storage.ts"],
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "set": {
      name: "set",
      type: "hooks:hook",
      registryDependencies: undefined,
      component: React.lazy(() => import("@/registry/react-hooks/hook/set")),
      source: "",
      files: ["registry/react-hooks/hook/set.ts"],
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "throttle": {
      name: "throttle",
      type: "hooks:hook",
      registryDependencies: undefined,
      component: React.lazy(() => import("@/registry/react-hooks/hook/throttle")),
      source: "",
      files: ["registry/react-hooks/hook/throttle.ts"],
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "toggle": {
      name: "toggle",
      type: "hooks:hook",
      registryDependencies: undefined,
      component: React.lazy(() => import("@/registry/react-hooks/hook/toggle")),
      source: "",
      files: ["registry/react-hooks/hook/toggle.ts"],
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "visibility-change": {
      name: "visibility-change",
      type: "hooks:hook",
      registryDependencies: undefined,
      component: React.lazy(() => import("@/registry/react-hooks/hook/visibility-change")),
      source: "",
      files: ["registry/react-hooks/hook/visibility-change.ts"],
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "window-scroll": {
      name: "window-scroll",
      type: "hooks:hook",
      registryDependencies: undefined,
      component: React.lazy(() => import("@/registry/react-hooks/hook/window-scroll")),
      source: "",
      files: ["registry/react-hooks/hook/window-scroll.ts"],
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "window-size": {
      name: "window-size",
      type: "hooks:hook",
      registryDependencies: undefined,
      component: React.lazy(() => import("@/registry/react-hooks/hook/window-size")),
      source: "",
      files: ["registry/react-hooks/hook/window-size.ts"],
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
  },
}
