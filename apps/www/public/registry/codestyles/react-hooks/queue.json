{
  "name": "queue",
  "dependencies": [],
  "files": [
    {
      "name": "queue.ts",
      "content": "import * as React from \"react\"\n\nexport function useQueue<T>(initialValue: T[] = []): {\n  add: (element: T) => void\n  remove: () => T | undefined\n  clear: () => void\n  first: T | undefined\n  last: T | undefined\n  size: number\n  queue: T[]\n} {\n  const [queue, setQueue] = React.useState<T[]>(initialValue)\n\n  const add = React.useCallback((element: T) => {\n    setQueue((q) => [...q, element])\n  }, [])\n\n  const remove = React.useCallback((): T | undefined => {\n    let removedElement: T | undefined\n\n    setQueue(([first, ...q]) => {\n      removedElement = first\n      return q\n    })\n\n    return removedElement\n  }, [])\n\n  const clear = React.useCallback(() => {\n    setQueue([])\n  }, [])\n\n  return {\n    add,\n    remove,\n    clear,\n    first: queue[0],\n    last: queue[queue.length - 1],\n    size: queue.length,\n    queue,\n  }\n}\n"
    }
  ],
  "type": "hooks:hook"
}